import math

"""
Question:
    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
    The first ten pentagonal numbers are:
        1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    It can be seen that
        P4 + P7 = 22 + 70 = 92 = P8
    However, their difference,
        70 − 22 = 48
        is not pentagonal.
    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
        difference are pentagonal and D = |Pk − Pj| is minimised;
        what is the value of D?
"""

def get_pentagonal_number(n):
    return n * (3*n - 1) / 2

def is_pentagonal_number(x):
    n = int((math.sqrt(24*x + 1) + 1)/6)
    return x > 0 and n*(3*n - 1)/2 == x

def main():
    MAX = 5000
    diff = {}
    for i in range(1, MAX):
        for j in range(i, MAX + 1):
            pnj, pni = get_pentagonal_number(j), get_pentagonal_number(i)
            if is_pentagonal_number(pnj + pni) and is_pentagonal_number(pnj - pni):
                diff[j-i] = [j, i, pnj, pni, pnj - pni]
    print diff
    print diff[min(diff.keys())]

if __name__ == "__main__":
    main()
